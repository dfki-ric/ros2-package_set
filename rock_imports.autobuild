
rock_import_package "base/cmake"
rock_import_package "base/logging"
rock_import_package "base/types" do |pkg|
    pkg.add_cmake_arg("-DBINDINGS_RUBY=OFF" )
    pkg.add_cmake_arg("-DUSE_SISL=ON" )
    pkg.add_cmake_arg("-DSISL_PREFIX=#{ENV['AUTOPROJ_CURRENT_ROOT']}/../install/external-sisl/" )
    pkg.use_optional_dependency "external/sisl"
    pkg.use_optional_dependency "gui/vizkit3d"
end
rock_import_package "control/motor_controller"

rock_import_package "planning/ugv_nav4d" do |pkg| 
    pkg.use_optional_dependency "gui/vizkit3d"
end
rock_import_package "planning/sbpl"
rock_import_package "planning/sbpl_spline_primitives" do |pkg|
    pkg.add_cmake_arg("-DROCK_TEST_ENABLED=OFF")
    pkg.use_optional_dependency "gui/vizkit3d"
end
rock_import_package "planning/traversability_generator3d"
rock_import_package "gui/vizkit3d_debug_drawings" do |pkg|
    pkg.add_cmake_arg("-DWITH_PORTS=OFF" )
end
rock_import_package "control/trajectory_follower"
rock_import_package "slam/maps" do |pkg| 
    pkg.use_optional_dependency "gui/vizkit3d"
end
rock_import_package "gui/vizkit3d"
rock_import_package "gui/osgviz"

rock_import_package "external/sisl"
rock_import_package "gui/osg_qt5"
rock_import_package "gui/qtpropertybrowser"
rock_import_package "base/numeric"
rock_import_package "base/boost_serialization"
rock_import_package "tools/backward-cpp"

### Mars 2

rock_import_package("simulation/mars2/mars_interfaces")
rock_import_package("simulation/mars2/mars_core")
rock_import_package("simulation/mars2/envire_mars_graphics")
rock_import_package("simulation/mars2/mars_graphics")
rock_import_package("simulation/mars2/envire_mars_motors")
rock_import_package("simulation/mars2/envire_mars_ode_physics")
rock_import_package("simulation/mars2/envire_mars_ode_collision")
rock_import_package("simulation/mars2/mars_app")
rock_import_package("simulation/mars2/envire_mars_sensors")
rock_import_package("simulation/mars2/mars_gui")
rock_import_package("simulation/mars2/mars_ode_physics")
rock_import_package 'simulation/mars2/mars_ode_collision'
rock_import_package 'simulation/mars2/mars_scene_loader'
rock_import_package 'simulation/mars2/mars_particle_system'
rock_import_package 'simulation/mars2/mars_skydome'

def graphics_collection_package(srcDir,type = :import_package)
    send(type,srcDir) do |pkg|
        pkg.importdir = "simulation/graphics_collection/"
        yield pkg if block_given?
    end
end

graphics_collection_package "simulation/graphics_collection/osg_animations"
graphics_collection_package "simulation/graphics_collection/osg_frames"
graphics_collection_package "simulation/graphics_collection/osg_lines"
graphics_collection_package "simulation/graphics_collection/osg_material_manager"
graphics_collection_package "simulation/graphics_collection/osg_plot"
graphics_collection_package "simulation/graphics_collection/osg_points"
graphics_collection_package "simulation/graphics_collection/osg_terrain"
graphics_collection_package "simulation/graphics_collection/osg_text"
graphics_collection_package "simulation/graphics_collection/osg_text_factory"

def gui_collection_package(srcDir,type = :import_package)
    send(type,srcDir) do |pkg|
        pkg.importdir = "simulation/gui_collection/"
        yield pkg if block_given?
    end
end

gui_collection_package "simulation/gui_collection/cfg_manager_gui"
gui_collection_package "simulation/gui_collection/config_map_gui"
gui_collection_package "simulation/gui_collection/data_broker_gui"
gui_collection_package "simulation/gui_collection/data_broker_plotter"
gui_collection_package "simulation/gui_collection/data_broker_plotter2"
gui_collection_package "simulation/gui_collection/gui_app"
gui_collection_package "simulation/gui_collection/lib_manager_gui"
gui_collection_package "simulation/gui_collection/log_console"
gui_collection_package "simulation/gui_collection/main_gui"

# TODO: THESE PACKAGES SHOULD BE A PART OF MORE GENERIC PACKAGE SET
# SINCE THEY DOES NOT HAVE RELATION TO MARS OR TO SIMULATION PACKAGE SET
# SO MOVE THEM TO CORRESPONDING GITHUB GROUP
rock_import_package("simulation/utils")
rock_import_package("simulation/data_broker")
rock_import_package("simulation/cfg_manager")

rock_import_package("tools/configmaps")
rock_import_package("simulation/lib_manager")

rock_import_package("envire/envire_core") do |pkg|
    pkg.add_cmake_arg("-DROCK_TEST_ENABLED=OFF")
    pkg.use_optional_dependency "tools/plugin_manager"
end

rock_import_package("envire/envire_types")
rock_import_package("envire/envire_smurf_loader")

rock_import_package("external/osgQt")
rock_import_package("external/ogdf")

rock_import_package("simulation/ode-16")

rock_import_package("tools/plugin_manager")

